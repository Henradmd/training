// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/sterlp/dev/workset/training/protocol-buffers/src/main/resources/wire_message.proto at 28:1
package org.sterl.wire;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;

public final class JumpData extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_HOWHIGH = 10;

  public static final Integer DEFAULT_HOWFAR = 10;

  /**
   * how high in cm
   */
  @ProtoField(
      tag = 1,
      type = Message.Datatype.INT32,
      label = Message.Label.REQUIRED
  )
  public final Integer howHigh;

  /**
   * how far in cm
   */
  @ProtoField(
      tag = 2,
      type = Message.Datatype.INT32,
      label = Message.Label.REQUIRED
  )
  public final Integer howFar;

  public JumpData(Integer howHigh, Integer howFar) {
    this.howHigh = howHigh;
    this.howFar = howFar;
  }

  private JumpData(Builder builder) {
    this(builder.howHigh, builder.howFar);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof JumpData)) return false;
    JumpData o = (JumpData) other;
    return equals(howHigh, o.howHigh)
        && equals(howFar, o.howFar);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = howHigh != null ? howHigh.hashCode() : 0;
      result = result * 37 + (howFar != null ? howFar.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<JumpData> {
    public Integer howHigh;

    public Integer howFar;

    public Builder() {
    }

    public Builder(JumpData message) {
      super(message);
      if (message == null) return;
      this.howHigh = message.howHigh;
      this.howFar = message.howFar;
    }

    /**
     * how high in cm
     */
    public Builder howHigh(Integer howHigh) {
      this.howHigh = howHigh;
      return this;
    }

    /**
     * how far in cm
     */
    public Builder howFar(Integer howFar) {
      this.howFar = howFar;
      return this;
    }

    @Override
    public JumpData build() {
      if (howHigh == null
          || howFar == null) {
        throw new RuntimeException(howHigh + "howHigh" + howFar + "howFar");
      }
      return new JumpData(this);
    }
  }
}
