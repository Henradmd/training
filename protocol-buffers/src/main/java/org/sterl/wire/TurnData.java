// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/sterlp/dev/workset/training/protocol-buffers/src/main/resources/wire_message.proto at 24:1
package org.sterl.wire;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;

/**
 * turn data
 */
public final class TurnData extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ANGLE = 90;

  /**
   * the angle to do
   */
  @ProtoField(
      tag = 1,
      type = Message.Datatype.INT32,
      label = Message.Label.REQUIRED
  )
  public final Integer angle;

  public TurnData(Integer angle) {
    this.angle = angle;
  }

  private TurnData(Builder builder) {
    this(builder.angle);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TurnData)) return false;
    return equals(angle, ((TurnData) other).angle);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = angle != null ? angle.hashCode() : 0);
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<TurnData> {
    public Integer angle;

    public Builder() {
    }

    public Builder(TurnData message) {
      super(message);
      if (message == null) return;
      this.angle = message.angle;
    }

    /**
     * the angle to do
     */
    public Builder angle(Integer angle) {
      this.angle = angle;
      return this;
    }

    @Override
    public TurnData build() {
      if (angle == null) {
        throw new RuntimeException(angle + "angle");
      }
      return new TurnData(this);
    }
  }
}
