// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/sterlp/dev/workset/training/protocol-buffers/src/main/resources/wire_message.proto at 5:1
package org.sterl.wire;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;
import java.lang.Object;
import java.lang.Override;

public final class RequestMessage extends Message {
  private static final long serialVersionUID = 0L;

  public static final MessageType DEFAULT_TYPE = MessageType.MOVE;

  @ProtoField(
      tag = 1,
      type = Message.Datatype.ENUM,
      label = Message.Label.REQUIRED
  )
  public final MessageType type;

  @ProtoField(
      tag = 2
  )
  public final MoveData moveData;

  @ProtoField(
      tag = 3
  )
  public final TurnData turnData;

  @ProtoField(
      tag = 4
  )
  public final JumpData jumpData;

  public RequestMessage(MessageType type, MoveData moveData, TurnData turnData, JumpData jumpData) {
    this.type = type;
    this.moveData = moveData;
    this.turnData = turnData;
    this.jumpData = jumpData;
  }

  private RequestMessage(Builder builder) {
    this(builder.type, builder.moveData, builder.turnData, builder.jumpData);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RequestMessage)) return false;
    RequestMessage o = (RequestMessage) other;
    return equals(type, o.type)
        && equals(moveData, o.moveData)
        && equals(turnData, o.turnData)
        && equals(jumpData, o.jumpData);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = type != null ? type.hashCode() : 0;
      result = result * 37 + (moveData != null ? moveData.hashCode() : 0);
      result = result * 37 + (turnData != null ? turnData.hashCode() : 0);
      result = result * 37 + (jumpData != null ? jumpData.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<RequestMessage> {
    public MessageType type;

    public MoveData moveData;

    public TurnData turnData;

    public JumpData jumpData;

    public Builder() {
    }

    public Builder(RequestMessage message) {
      super(message);
      if (message == null) return;
      this.type = message.type;
      this.moveData = message.moveData;
      this.turnData = message.turnData;
      this.jumpData = message.jumpData;
    }

    public Builder type(MessageType type) {
      this.type = type;
      return this;
    }

    public Builder moveData(MoveData moveData) {
      this.moveData = moveData;
      return this;
    }

    public Builder turnData(TurnData turnData) {
      this.turnData = turnData;
      return this;
    }

    public Builder jumpData(JumpData jumpData) {
      this.jumpData = jumpData;
      return this;
    }

    @Override
    public RequestMessage build() {
      if (type == null) {
        throw new RuntimeException(type + "type");
      }
      return new RequestMessage(this);
    }
  }

  public enum MessageType implements ProtoEnum {
    MOVE(0),

    STOP(1),

    TURN(2),

    JUMP(3);

    private final int value;

    MessageType(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
